<!DOCTYPE html>
<html>
<head>
	<title>Firewall's Stack OverFlow</title>
	<% include ./head.ejs %>
</head>
<body>
	<% include ./navbar.ejs %><br>
	<div class="container">
		<div>
			<button class="btn btn-info btn-block" style="font-weight: bold" onclick="window.location.href='/user'"> <i class="fas fa-users"></i> Go To User Center </button>
			<button class="btn btn-info btn-block" style="font-weight: bold" onclick="window.location.href='/media'"> <i class="fas fa-film"></i> Go To Media Center </button>
			<button class="btn btn-info btn-block" style="font-weight: bold" onclick="window.location.href='/answers'"> Go To Answer Center </button>
		</div><hr>
		<% if (user) { %>
			<h3 style="text-align: center;"> Stack OverFlow's HomePage <button  href="#addModule" class="btn btn-success" style="margin-left:8%;" data-toggle="modal"><i class="far fa-plus-square"></i> Ask Question</button></h3>
		<% } else { %>
			<h3 style="text-align: center;"> Stack OverFlow's HomePage <button class="btn btn-success btn" style="margin-left:5%;" disabled><i class="far fa-plus-square"></i> Ask Question</button></h3>
		<% } %>
		<br>
		<ul class="list-group" style="padding:0 1% 0 1%">
			<li class="list-group-item list-group-header">Search Questions Only By ID </li>
			<li class="list-group-item list-body">
				<form>
					<div class="form-group">
						<label for="question_id" class="btn btn-secondary">Enter Question ID: </label>
						<input type="text" class="form-control" id="question_id" name="question_id" placeholder="Example: questionExample " required></input>
					</div>
				 <div style="margin-left: 15% " >
						<button type="submit" class="btn btn-success btn-sm" id="getBtn"> <i class="fas fa-paper-plane"></i> Get Question </button>
						<button type="submit" class="btn btn-success btn-sm" style="margin-left: 1%" id="answerBtn"> <i class="fas fa-paper-plane"></i> Get All Answer </button>
						<% if(user) { %>
						<button type="submit" class="btn btn-success btn-sm" style="margin-left: 1%" id="upvoteBtn"> <i class="fas fa-thumbs-up"></i> Upvote Questin </button>
						<button type="submit" class="btn btn-success btn-sm" style="margin-left: 1%" id="downBtn"> <i class="fas fa-thumbs-down"></i> Downvote Question </button>
						<button type="submit" class="btn btn-danger btn-sm" style="margin-left: 1%" id="deleteBtn"> <i class="fas fa-trash-alt"></i> Delete Questin </button>
						<% } else { %>
							<label class="btn btn-warning">Login to get more operations about questions </label>
						   <% } %>
				 </div>
			</form>
			</li>
		</ul><br>
		<ul class="list-group" style="padding:2% 1% 0 1%">
				<li class="list-group-item list-group-header">Search Questions with multi limitation </li>
				<li class="list-group-item list-body">
					<form id="searchQuestions">
						<div class="form-group">
							<label for="question_timestamp" class="btn btn-secondary">Timestamp: </label>
							<input type="number" class="form-control" id="question_timestamp" name="question_timestamp" placeholder="Timestamp: Integer "></input>
						</div>
						<div class="form-group">
							<label for="question_limit" class="btn btn-secondary">Limit: </label>
							<input type="number" max="100" min="25" class="form-control" id="question_limit" name="question_limit" placeholder="Limitation(25-100)"></input>
						</div>
						<div class="form-group">
							<label for="question_q" class="btn btn-secondary">Query: </label>
							<input type="text" class="form-control" id="question_q" name="question_q" placeholder="Query which supports spaces">
						</div>
						<div class="form-group">
							<label for="question_tags" class="btn btn-secondary">Tags (seperated by spaces): </label>
							<input type="text" class="form-control" id="question_tags" name="question_tags" placeholder="Return only questions which have all of these tasg(and)">
						</div>
						<div class="form-group" >
							<label for="question_sort" class="btn btn-secondary">Sort by: </label><br>
							<input type="radio" name="question_sort" value="score" checked> Score
							<input type="radio" name="question_sort" value="time"> Timestamp
						</div>
						<div class="form-group" >
							<label for="question_hasMedia" class="btn btn-secondary">Has Media: </label><br>
							<input type="radio" name="question_hasMedia" value=false checked> No
							<input type="radio" name="question_hasMedia" value=true > Yes
						</div>
						<div class="form-group" >
							<label for="question_hasAnswer" class="btn btn-secondary">Has Accepted Answer: </label><br>
							<input type="radio" name="question_hasAnswer" value=false checked> No
							<input type="radio" name="question_hasAnswer" value=true  > Yes
						</div>
							<button type="submit" class="btn btn-success btn" style="margin-left: 45%"> <i class="fas fa-search-plus"></i> Search Questions </button>
						</form>
					</li>
			</ul><br>
			<ul class="list-group" style="padding:0 1% 0 1%">
					<li class="list-group-item list-group-header"> Questions Results: </li>
					<li class="list-group-item list-body">
						<textarea class="form-control form-rounded" rows="5" id='response'>You do not get results currently !</textarea>
					</li>
			</ul><br>
	</div>

	<div id="addModule" class="modal fade">
				<div class="modal-dialog modal-login">
					<div class="modal-content">
						<div class="modal-header">
							<h4 class="modal-title">Add Question</h4>	
							<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
						</div>
						<div class="modal-body">
							<form id="addQuestion">
								<div class="form-group">
									<label for="question_title1"  class="btn btn-secondary">Question's Title:</label>
									<input type="text" class="form-control" id="question_title1" placeholder="Type the title of a new question" name="question_title1" required>
								</div>
								<div class="form-group">
									<label for="question_body1"  class="btn btn-secondary">Question's Body:</label>
									<input type="text" class="form-control" id="question_body1" placeholder="Type the body of a new question" name="question_body1" required>
								</div>
								<div class="form-group">
									<label for="question_tags1"  class="btn btn-secondary">Question's Tags:</label>
									<input type="text" class="form-control" id="question_tags1" placeholder="Type the Tags of a new question( seperated by spaces)" name="question_tags1" required>
								</div>
								<div class="form-group">
									<label for="question_media1" class="btn btn-secondary">Media IDs: </label>
									<input type="text" class="form-control" id="question_media1" name="question_media1" placeholder="Multi IDs should be seperated by spaces"></input>
							 </div>
							<button type="submit" class="btn btn-lg btn-block login-btn"> <i class="fas fa-search-plus"></i> Post Question </button>
						 </form>
						</div>
					</div>
				</div>
		</div>
		<script type="text/javascript">
			$("#getBtn").click(function() {
				event.preventDefault();
				$.ajax({
					type: 'GET',
					url: '/questions/' + $("#question_id").val(),
					processData: false,
					success: function(res) {
						console.log("getBtn .click sucess");
						if (res.status == 'OK') {
							$('#response').val(JSON.stringify(res.question))
						} else {
							$('#response').val(JSON.stringify(res));
						}
					},
					error: function(err) {
						console.log("getBtn .click error");
						console.log("getBtn .click");
						$('#response').val(JSON.stringify(err));
					}
				});
			});
			$("#answerBtn").click(function() {
				event.preventDefault();
				$.ajax({
					type: 'GET',
					url: '/questions/' + $("#question_id").val() + "/answers",
					processData: false,
					success: function(res) {
						if (res.status == 'OK') {
							$('#response').val(JSON.stringify(res.answers))
						} else {
							$('#response').val(JSON.stringify(res))
						}
					},
					error: function(err) {
						$('#response').val(JSON.stringify(err))
					}
				});

			});
			$('#searchQuestions').submit(function(event){
				event.preventDefault();
				var timestamp = Math.round(new Date() / 1000);
				var limit = $('#question_limit').val()
				var tags = [];
				var queryStr= $('#question_q').val()
				var sort_by = $('#question_sort').val()
				var accepted_answer = $('question_hasAnswer').val()
				console.log("question_hasAnswer : " + accepted_answer);
				var has_media = $('question_hasMedia').val()
				var temp_tags =$('#question_tags').val();
				timestamp = $('#question_timestamp').val() // number ; default: current time
				if(temp_tags && temp_tags.length > 0)
					 tags = temp_tags.split(' ');
				console.log(timestamp + " " + limit + " "+ sort_by + " "+ accepted_answer + " "+ has_media + " " + queryStr);
				console.log(JSON.stringify(tags));
				$.ajax({
					type: 'POST',
					url: '/search',
					dataType: 'json',
					data: JSON.stringify({
					timestamp: timestamp,
					limit: limit,
					q: queryStr, // optional
					sort_by: sort_by,
					tags: tags,
					has_media: has_media,
					accepted: accepted_answer
					}),
					contentType: 'application/json',
					success: function (res) {
						if(res.status == 'OK'){
							$('#response').val(JSON.stringify(res.questions))
					}else{
						$('#response').val(JSON.stringify(res))
					}
					},
					error: function (err) {
						$('#response').val(JSON.stringify(err))
					}
					});
				});

			$("#addQuestion").submit(function(event){
				event.preventDefault();
				let tags = $('#question_tags1').val().split(' ');
				let media = [];
				let temp_media = $('#question_media1').val();
				if(temp_media && temp_media.length > 0)
					media = temp_media.split(' ');
				$.ajax({
					type: 'POST',
					url: '/questions/add',
					dataType: 'json',
					data: JSON.stringify({
						title: $("#question_title1").val(),
						body: $("#question_body1").val(),
						tags: tags,
						media: media  // Optional
				}),
				contentType: 'application/json',
				success: function (res) {
					$('#response').val("");
					if(res.status=='OK'){
						alert('Post a new question successfully! ID: ' + res.id);
					}else{
						$('#response').val(JSON.stringify(res));
					}
				},
				error: function (err) { 
					$('#response').val(JSON.stringify(err));
				}
				});
			});


			$("#upvoteBtn").click(function() {
				event.preventDefault();
				$.ajax({
					type: 'POST',
					url: '/questions/' + $("#question_id").val() + "/upvote",
					dataType: 'json',
					data: JSON.stringify({
						upvote: true
					}),
					contentType: 'application/json',
					success: function(res) {
						$('#response').val("");
						if (res.status == 'OK') {
							alert("Pass Upvote Action")
						} else {
							$('#response').val(JSON.stringify(res));
						}
					},
					error: function(err) {
						$('#response').val(JSON.stringify(err));
					}
				});
			});
			$("#downBtn").click(function() {
				event.preventDefault();
				$.ajax({
					type: 'POST',
					url: '/questions/' + $("#question_id").val() + "/upvote",
					dataType: 'json',
					data: JSON.stringify({
						upvote: false
					}),
					contentType: 'application/json',
					success: function(res) {
						$('#response').val("");
						if (res.status == 'OK') {
							alert("Pass Downvote Action")
						} else {
							$('#response').val(JSON.stringify(res));
						}
					},
					error: function(err) {
						$('#response').val(JSON.stringify(err));
					}
				});

			});
			$("#deleteBtn").click(function() {
				event.preventDefault();
				$.ajax({
					type: 'DELETE',
					url: '/questions' + $("#question_id").val(),
					processData: false,
					success: function(res) {
						$('#response').val("");
						if (res.status == 200) {
							alert("Delete one Question Successfully!")
						} else {
							$('#response').val(JSON.stringify(res));
						}
					},
					error: function(err) {
						$('#response').val(JSON.stringify(err));
					}
				});
			});
	   </script>
</body>
</html>
